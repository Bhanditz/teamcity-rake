<?xml version="1.0" encoding="UTF-8"?>
<project name="rake-runner" default="all">
  
  
  <property file="rake-runner.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.rb"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.teamcity-agentapi.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/agent-api.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/runtime-util.jar"/>
  </path>
  
  <path id="library.teamcity-common.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/common-api.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/annotations.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/openapi.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/util.jar"/>
  </path>
  
  <path id="library.teamcity-serverapi.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/server-api.jar"/>
  </path>
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module rake-runner-common -->
  
  <dirname property="module.rake-runner-common.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.rake-runner-common" value="${compiler.args}"/>
  
  <property name="rake-runner-common.output.dir" value="${module.rake-runner-common.basedir}/out/production/rake-runner-common"/>
  <property name="rake-runner-common.testoutput.dir" value="${module.rake-runner-common.basedir}/out/test/rake-runner-common"/>
  
  <path id="rake-runner-common.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="rake-runner-common.module.classpath">
    <path refid="library.teamcity-common.classpath"/>
  </path>
  
  <path id="rake-runner-common.runtime.module.classpath">
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-common.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.rake-runner-common">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.rake-runner-common">
    <patternset refid="excluded.from.module.rake-runner-common"/>
  </patternset>
  
  <path id="rake-runner-common.module.sourcepath">
    <dirset dir="${module.rake-runner-common.basedir}/rake-runner-common">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.rake-runner-common" depends="compile.module.rake-runner-common.production,compile.module.rake-runner-common.tests" description="Compile module rake-runner-common"/>
  
  <target name="compile.module.rake-runner-common.production" description="Compile module rake-runner-common; production classes">
    <mkdir dir="${rake-runner-common.output.dir}"/>
    <javac destdir="${rake-runner-common.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.rake-runner-common}"/>
      <bootclasspath refid="rake-runner-common.module.bootclasspath"/>
      <classpath refid="rake-runner-common.module.classpath"/>
      <src refid="rake-runner-common.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.rake-runner-common"/>
    </javac>
    
    <copy todir="${rake-runner-common.output.dir}">
      <fileset dir="${module.rake-runner-common.basedir}/rake-runner-common/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.rake-runner-common.tests" depends="compile.module.rake-runner-common.production" description="compile module rake-runner-common; test classes" unless="skip.tests"/>
  
  <target name="clean.module.rake-runner-common" description="cleanup module">
    <delete dir="${rake-runner-common.output.dir}"/>
    <delete dir="${rake-runner-common.testoutput.dir}"/>
  </target>
  
  
  <!-- Module rake-runner-root -->
  
  <dirname property="module.rake-runner-root.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.rake-runner-root" value="${compiler.args}"/>
  
  <property name="rake-runner-root.output.dir" value="${module.rake-runner-root.basedir}/out/production/rake-runner-root"/>
  <property name="rake-runner-root.testoutput.dir" value="${module.rake-runner-root.basedir}/out/test/rake-runner-root"/>
  
  <path id="rake-runner-root.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="rake-runner-root.module.classpath"/>
  
  <path id="rake-runner-root.runtime.module.classpath">
    <pathelement location="${rake-runner-root.output.dir}"/>
    <pathelement location="${rake-runner-root.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.rake-runner-root">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.rake-runner-root">
    <patternset refid="excluded.from.module.rake-runner-root"/>
  </patternset>
  
  
  <target name="compile.module.rake-runner-root" depends="compile.module.rake-runner-root.production,compile.module.rake-runner-root.tests" description="Compile module rake-runner-root"/>
  
  <target name="compile.module.rake-runner-root.production" description="Compile module rake-runner-root; production classes"/>
  
  <target name="compile.module.rake-runner-root.tests" depends="compile.module.rake-runner-root.production" description="compile module rake-runner-root; test classes" unless="skip.tests"/>
  
  <target name="clean.module.rake-runner-root" description="cleanup module">
    <delete dir="${rake-runner-root.output.dir}"/>
    <delete dir="${rake-runner-root.testoutput.dir}"/>
  </target>
  
  
  <!-- Module rake-runner-agent -->
  
  <dirname property="module.rake-runner-agent.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.rake-runner-agent" value="${compiler.args}"/>
  
  <property name="rake-runner-agent.output.dir" value="${module.rake-runner-agent.basedir}/out/production/rake-runner-agent"/>
  <property name="rake-runner-agent.testoutput.dir" value="${module.rake-runner-agent.basedir}/out/test/rake-runner-agent"/>
  
  <path id="rake-runner-agent.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="rake-runner-agent.module.classpath">
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-agentapi.classpath"/>
    <path refid="library.teamcity-common.classpath"/>
  </path>
  
  <path id="rake-runner-agent.runtime.module.classpath">
    <pathelement location="${rake-runner-agent.output.dir}"/>
    <pathelement location="${rake-runner-agent.testoutput.dir}"/>
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-common.classpath"/>
    <path refid="library.teamcity-agentapi.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.rake-runner-agent">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.rake-runner-agent">
    <patternset refid="excluded.from.module.rake-runner-agent"/>
  </patternset>
  
  <path id="rake-runner-agent.module.sourcepath">
    <dirset dir="${module.rake-runner-agent.basedir}/rake-runner-agent">
      <include name="resources"/>
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.rake-runner-agent" depends="compile.module.rake-runner-agent.production,compile.module.rake-runner-agent.tests" description="Compile module rake-runner-agent"/>
  
  <target name="compile.module.rake-runner-agent.production" depends="compile.module.rake-runner-common" description="Compile module rake-runner-agent; production classes">
    <mkdir dir="${rake-runner-agent.output.dir}"/>
    <javac destdir="${rake-runner-agent.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.rake-runner-agent}"/>
      <bootclasspath refid="rake-runner-agent.module.bootclasspath"/>
      <classpath refid="rake-runner-agent.module.classpath"/>
      <src refid="rake-runner-agent.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.rake-runner-agent"/>
    </javac>
    
    <copy todir="${rake-runner-agent.output.dir}">
      <fileset dir="${module.rake-runner-agent.basedir}/rake-runner-agent/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.rake-runner-agent.basedir}/rake-runner-agent/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.rake-runner-agent.tests" depends="compile.module.rake-runner-agent.production" description="compile module rake-runner-agent; test classes" unless="skip.tests"/>
  
  <target name="clean.module.rake-runner-agent" description="cleanup module">
    <delete dir="${rake-runner-agent.output.dir}"/>
    <delete dir="${rake-runner-agent.testoutput.dir}"/>
  </target>
  
  
  <!-- Module rake-runner-server -->
  
  <dirname property="module.rake-runner-server.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.rake-runner-server" value="${compiler.args}"/>
  
  <property name="rake-runner-server.output.dir" value="${module.rake-runner-server.basedir}/out/production/rake-runner-server"/>
  <property name="rake-runner-server.testoutput.dir" value="${module.rake-runner-server.basedir}/out/test/rake-runner-server"/>
  
  <path id="rake-runner-server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="rake-runner-server.module.classpath">
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-serverapi.classpath"/>
    <path refid="library.teamcity-common.classpath"/>
  </path>
  
  <path id="rake-runner-server.runtime.module.classpath">
    <pathelement location="${rake-runner-server.output.dir}"/>
    <pathelement location="${rake-runner-server.testoutput.dir}"/>
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-common.classpath"/>
    <path refid="library.teamcity-serverapi.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.rake-runner-server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.rake-runner-server">
    <patternset refid="excluded.from.module.rake-runner-server"/>
  </patternset>
  
  <path id="rake-runner-server.module.sourcepath">
    <dirset dir="${module.rake-runner-server.basedir}/rake-runner-server">
      <include name="resources"/>
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.rake-runner-server" depends="compile.module.rake-runner-server.production,compile.module.rake-runner-server.tests" description="Compile module rake-runner-server"/>
  
  <target name="compile.module.rake-runner-server.production" depends="compile.module.rake-runner-common" description="Compile module rake-runner-server; production classes">
    <mkdir dir="${rake-runner-server.output.dir}"/>
    <javac destdir="${rake-runner-server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.rake-runner-server}"/>
      <bootclasspath refid="rake-runner-server.module.bootclasspath"/>
      <classpath refid="rake-runner-server.module.classpath"/>
      <src refid="rake-runner-server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.rake-runner-server"/>
    </javac>
    
    <copy todir="${rake-runner-server.output.dir}">
      <fileset dir="${module.rake-runner-server.basedir}/rake-runner-server/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.rake-runner-server.basedir}/rake-runner-server/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.rake-runner-server.tests" depends="compile.module.rake-runner-server.production" description="compile module rake-runner-server; test classes" unless="skip.tests"/>
  
  <target name="clean.module.rake-runner-server" description="cleanup module">
    <delete dir="${rake-runner-server.output.dir}"/>
    <delete dir="${rake-runner-server.testoutput.dir}"/>
  </target>
  
  
  <!-- Module rake-runner-test -->
  
  <dirname property="module.rake-runner-test.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.rake-runner-test" value="${compiler.args}"/>
  
  <property name="rake-runner-test.output.dir" value="${module.rake-runner-test.basedir}/out/production/rake-runner-test"/>
  <property name="rake-runner-test.testoutput.dir" value="${module.rake-runner-test.basedir}/out/test/rake-runner-test"/>
  
  <path id="rake-runner-test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="rake-runner-test.module.classpath">
    <pathelement location="${rake-runner-agent.output.dir}"/>
    <pathelement location="${rake-runner-agent.testoutput.dir}"/>
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <pathelement location="${rake-runner-server.output.dir}"/>
    <pathelement location="${rake-runner-server.testoutput.dir}"/>
    <pathelement location="${basedir}/rake-runner-test/lib/test-core.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/testng-jdk15.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/junit-3.8.2.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/spring-mock.jar"/>
    <path refid="library.teamcity-common.classpath"/>
    <path refid="library.teamcity-agentapi.classpath"/>
    <path refid="library.teamcity-serverapi.classpath"/>
  </path>
  
  <path id="rake-runner-test.runtime.module.classpath">
    <pathelement location="${rake-runner-test.output.dir}"/>
    <pathelement location="${rake-runner-test.testoutput.dir}"/>
    <pathelement location="${rake-runner-agent.output.dir}"/>
    <pathelement location="${rake-runner-agent.testoutput.dir}"/>
    <pathelement location="${rake-runner-common.output.dir}"/>
    <pathelement location="${rake-runner-common.testoutput.dir}"/>
    <path refid="library.teamcity-common.classpath"/>
    <path refid="library.teamcity-agentapi.classpath"/>
    <pathelement location="${rake-runner-server.output.dir}"/>
    <pathelement location="${rake-runner-server.testoutput.dir}"/>
    <path refid="library.teamcity-serverapi.classpath"/>
    <pathelement location="${basedir}/rake-runner-test/lib/test-core.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/testng-jdk15.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/junit-3.8.2.jar"/>
    <pathelement location="${basedir}/rake-runner-test/lib/spring-mock.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.rake-runner-test">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.rake-runner-test">
    <patternset refid="excluded.from.module.rake-runner-test"/>
  </patternset>
  
  
  <target name="compile.module.rake-runner-test" depends="compile.module.rake-runner-test.production,compile.module.rake-runner-test.tests" description="Compile module rake-runner-test"/>
  
  <target name="compile.module.rake-runner-test.production" depends="compile.module.rake-runner-agent,compile.module.rake-runner-common,compile.module.rake-runner-server" description="Compile module rake-runner-test; production classes"/>
  
  <target name="compile.module.rake-runner-test.tests" depends="compile.module.rake-runner-test.production" description="compile module rake-runner-test; test classes" unless="skip.tests"/>
  
  <target name="clean.module.rake-runner-test" description="cleanup module">
    <delete dir="${rake-runner-test.output.dir}"/>
    <delete dir="${rake-runner-test.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.rake-runner-common, clean.module.rake-runner-root, clean.module.rake-runner-agent, clean.module.rake-runner-server, clean.module.rake-runner-test" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.rake-runner-common, compile.module.rake-runner-root, compile.module.rake-runner-agent, compile.module.rake-runner-server, compile.module.rake-runner-test" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <mkdir dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="artifact.rake-runner-server:web_exploded" depends="init.artifacts" description="Build &apos;rake-runner-server:Web exploded&apos; artifact">
    <property name="artifact.temp.output.rake-runner-server:web_exploded" value="${artifacts.temp.dir}/rake_runner_server_Web_exploded"/>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}"/>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}/plugins"/>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}/plugins/rake-runner"/>
    <copy todir="${artifact.temp.output.rake-runner-server:web_exploded}/plugins/rake-runner">
      <fileset dir="${basedir}/rake-runner-server/resources/buildServerResources"/>
    </copy>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}/WEB-INF"/>
    <copy file="${basedir}/rake-runner-server/web/WEB-INF/web.xml" tofile="${artifact.temp.output.rake-runner-server:web_exploded}/WEB-INF/web.xml"/>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.temp.output.rake-runner-server:web_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.temp.output.rake-runner-server:web_exploded}/WEB-INF/classes">
      <fileset dir="${rake-runner-server.output.dir}"/>
    </copy>
  </target>
  
  <target name="build.all.artifacts" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>
